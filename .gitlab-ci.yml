###############################################################################
# Copyright (c) 2016-22, Lawrence Livermore National Security, LLC
# and RAJA project contributors. See the RAJA/LICENSE file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
###############################################################################

###############################################################################
# General GitLab pipelines configurations for supercomputers and Linux clusters
# at Lawrence Livermore National Laboratory (LLNL).
#
# This entire pipeline is LLNL-specific
# #############################################################################

# We define the following GitLab pipeline variables:
#
# GIT_SUBMODULE_STRATEGY:
# Tells Gitlab to recursively update the submodules when cloning RAJA
#
# ALLOC_NAME:
# On LLNL's ruby, this pipeline creates only one allocation shared among jobs
# in order to save time and resources. This allocation has to be uniquely named
# so that we are sure to retrieve it.
#
# BUILD_ROOT:
# The path to the shared resources between all jobs. The BUILD_ROOT is unique to
# the pipeline, preventing any form of concurrency with other pipelines. This
# also means that the BUILD_ROOT directory will never be cleaned.
#
# DEFAULT_TIME:
# Default time to let the Lassen jobs run will be 30 minutes. However, if it is
# a job that requires more time, it will be overwritten in the lassen template
# file.
# TODO: add a clean-up mechanism

variables:
  MP_BRANCH: "develop"

# High level stages
stages:
  - build-and-test
  - multi_project

# Template for jobs triggering a build-and-test sub-pipelines:
.build-and-test:
  stage: build-and-test
  trigger:
    include:
      - local: '.gitlab/custom-jobs.yml'
      - project: 'radiuss/radiuss-shared-ci'
        ref: woptim/update-to-ibm-clang-14.0.5
        file: '${CI_MACHINE}-build-and-test.yml'
      - local: '.gitlab/${CI_MACHINE}-build-and-test-extra.yml'
    strategy: depend
    forward:
      pipeline_variables: true

# If testing develop branch, trigger RAJAPerf pipeline with this version of
# RAJA.
# TODO: Once spack allows to clone a specific commit on demand, then point to the exact commit.
#       This will prevent from sticking to a branch (here develop).
#       MP_BRANCH is short for "Multi-Project Branch" and will usually be develop.
trigger-rajaperf:
  stage: multi_project
  rules:
    - if: '$CI_COMMIT_BRANCH == "${MP_BRANCH}" || $MULTI_PROJECT == "ON"' #run only if ...
  variables:
    UPDATE_RAJA: ${MP_BRANCH}
  trigger:
    project: radiuss/rajaperf
    branch: develop
    strategy: depend

# Import parameters and pipelines defined by the project
include:
  - local: .gitlab/custom-variables.yml
  - local: .gitlab/custom-pipelines.yml

##############################################################################
# Copyright (c) 2016-22, Lawrence Livermore National Security, LLC
# and RAJA project contributors. See the RAJA/LICENSE file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
##############################################################################

##########
# CPU ONLY
##########

clang_11_0_0:
  variables:
    SPEC: "+openmp %clang@11.0.0"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Extra flags
gcc_8_3_1:
  variables:
    SPEC: "+openmp %gcc@8.3.1 cxxflags=\"-finline-functions -finline-limit=20000\" cflags=\"-finline-functions -finline-limit=20000\""
  extends: .build_and_test_on_lassen

# Overriding shared spec: Longer allocation + Allow failures
pgi_20_4_gcc_8_3_1:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} %pgi@20.4 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 120"
  extends: .build_and_test_on_lassen
  allow_failure: true

# Overriding shared spec: Extra flags
xl_16_1_1_11:
  variables:
    SPEC: "+openmp %xl@16.1.1.11 cxxflags=\"-qthreaded -std=c++14 -O3 -qstrict -qxlcompatmacros -qlanglvl=extended0x -qalias=noansi -qhot -qpic -qsmp=omp -qsuppress=1500-029 -qsuppress=1500-036\""
  extends: .build_and_test_on_lassen

# Overriding shared spec: Extra flags
xl_16_1_1_11_gcc_8_3_1:
  variables:
    SPEC: "+openmp %xl@16.1.1.11 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 -qthreaded -std=c++14 -O3 -qstrict -qxlcompatmacros -qlanglvl=extended0x -qalias=noansi -qhot -qpic -qsmp=omp -qsuppress=1500-029 -qsuppress=1500-036\" cflags=--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1"
  extends: .build_and_test_on_lassen

##########
# CUDA
##########

clang_9_cuda_11_0_2:
  variables:
    SPEC: "+openmp +cuda cuda_arch=70 %clang@9.0.0 ^cuda@11.0.2"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Longer allocation
ibm_clang_14_0_5_gcc_8_3_1_cuda_10_1_168:
  variables:
    SPEC: "${PROJECT_LASSEN_VARIANTS} +cuda %clang@ibm.14.0.5 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ^cuda@10.1.168 ${PROJECT_LASSEN_DEPS}"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 -W 120"
  extends: .build_and_test_on_lassen

clang_11_cuda_11_5_0:
  variables:
    SPEC: "+openmp +cuda cuda_arch=70 %clang@11.0.0 ^cuda@11.5.0"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_11_0_2:
  variables:
    SPEC: "+openmp +cuda %gcc@8.3.1 cuda_arch=70 ^cuda@11.0.2"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_11_5_0_ats_disabled:
  variables:
    SPEC: "+openmp +cuda %gcc@8.3.1 cuda_arch=70 ^cuda@11.5.0"
    LASSEN_BUILD_AND_TEST_JOB_ALLOC: "1 --atsdisable -W 60"
  extends: .build_and_test_on_lassen

# Overriding shared spec: Extra flags
xl_16_1_1_11_cuda_11_0_2:
  variables:
    SPEC: "+openmp +cuda %xl@16.1.1.11 cxxflags=\"-qthreaded -std=c++14 -O3 -qstrict -qxlcompatmacros -qlanglvl=extended0x -qalias=noansi -qhot -qpic -qsmp=omp -qsuppress=1500-029 -qsuppress=1500-036\" cuda_arch=70 ^cuda@11.0.2 ^cmake@3.14.5"
  allow_failure: true
  extends: .build_and_test_on_lassen

# Overriding shared spec: Extra flags
xl_16_1_1_11_gcc_8_3_1_cuda_11_0_2:
  variables:
    SPEC: "+openmp +cuda %xl@16.1.1.11 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 -qthreaded -std=c++14 -O3 -qstrict -qxlcompatmacros -qlanglvl=extended0x -qalias=noansi -qhot -qpic -qsmp=omp -qsuppress=1500-029 -qsuppress=1500-036\" cflags=--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1 cuda_arch=70 ^cuda@11.0.2 ^cmake@3.14.5"
  allow_failure: true
  extends: .build_and_test_on_lassen

##########
# EXTRAS
##########

clang_9_0_0_libcpp:
  variables:
    SPEC: "+openmp %clang@9.0.0+libcpp"
  extends: .build_and_test_on_lassen

clang_9_0_0_asan:
  variables:
    SPEC: "+openmp %clang@9.0.0 cxxflags=-fsanitize=address"
    ASAN_OPTIONS: "detect_leaks=1"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_10_1_168_desul_atomics:
  variables:
    SPEC: "+openmp +cuda +desul %gcc@8.3.1 cuda_arch=70 ^cuda@11.0.2"
  extends: .build_and_test_on_lassen
